/*
 * RequestVision.java
 *
 * Generated by Protege plugin Beanynizer. 
 * Changes will be lost! 
 */
package jadex.examples.cleanerworld.multi;

import jadex.adapter.fipa.AgentAction;


/**
 *  Java class for concept RequestVision of cleaner_beans ontology.
 */
public class RequestVision	extends AgentAction implements nuggets.INugget
{
	//-------- constants ----------

	//-------- attributes ----------

	/** Attribute for slot vision. */
	protected  Vision  vision;

	/** Attribute for slot cleaner. */
	protected  Cleaner  cleaner;

	//-------- constructors --------

	/**
	 *  Default Constructor. <br>
	 *  Create a new <code>RequestVision</code>.
	 */
	public RequestVision()  { //
	}

	//-------- accessor methods --------

	/**
	 *  Get the vision of this RequestVision.
	 * @return vision
	 */
	public Vision  getVision() {
		return this.vision;
	}

	/**
	 *  Set the vision of this RequestVision.
	 * @param vision the value to be set
	 */
	public void  setVision(Vision vision) {
		this.vision = vision;
	}

	/**
	 *  Get the cleaner of this RequestVision.
	 * @return cleaner
	 */
	public Cleaner  getCleaner() {
		return this.cleaner;
	}

	/**
	 *  Set the cleaner of this RequestVision.
	 * @param cleaner the value to be set
	 */
	public void  setCleaner(Cleaner cleaner) {
		this.cleaner = cleaner;
	}

	//-------- object methods --------

	/**
	 *  Get a string representation of this RequestVision.
	 *  @return The string representation.
	 */
	public String toString() {
		return "RequestVision("
           + ")";
	}
	
	//--------- nuggets methods ---------
	
	/**
	 * Persist this RequestVision using the nuggets utility.
	 * @param c 
	 */
	public void _persist(nuggets.ICruncher c) {
		// declare references
		int idCleaner = c.declare(cleaner);
		int idVision = c.declare(vision);
		// persist the nugget
		c.startConcept(this);
		if (idCleaner>0) 
			c.put("Cleaner", idCleaner);
		if (idVision>0) 
			c.put("Vision", idVision);
	}
	
	/**
	 * Restore this RequestVision 
	 * @param a the name of the attribute
	 * @param v the value of the attribute
	 */
	public void _set(String a, Object v) { //
		switch(hash(a)) {
		case 0: cleaner =  (Cleaner)v; return;
		case 1: vision =  (Vision)v; return;
		}                        
	}
	
private static final int hash(String name) {
   return ((329754857*name.charAt(0))>>>15)%2;
}

}
