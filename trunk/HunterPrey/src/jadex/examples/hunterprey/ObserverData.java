/*
 * ObserverData.java
 *
 * Generated by Protege plugin Beanynizer. 
 * Changes will be lost! 
 */
package jadex.examples.hunterprey;

import jadex.adapter.fipa.AgentIdentifier;


/**
 *  Java class for concept Observer of hunterprey_beans ontology.
 */
public abstract class ObserverData	extends Creature implements nuggets.INugget
{
	//-------- constants ----------

	//-------- attributes ----------

	//-------- constructors --------

	/**
	 *  Default Constructor. <br>
	 *  Create a new <code>Observer</code>.
	 */
	public ObserverData()  { //
	}

	//-------- accessor methods --------

	//-------- object methods --------

	/**
	 *  Get a string representation of this Observer.
	 *  @return The string representation.
	 */
	public String toString() {
		return "Observer("
		+ "aid="+getAID()
		+ ", location="+getLocation()
		+ ", name="+getName()
           + ")";
	}
	
	//--------- nuggets methods ---------
	
	/**
	 * Persist this Observer using the nuggets utility.
	 * @param c 
	 */
	public void _persist(nuggets.ICruncher c) {
		// declare references
		int idAID = c.declare(aid);
		int idLocation = c.declare(location);
		// persist the nugget
		c.startConcept(this);
		if (age!=0) 
			c.put("Age", String.valueOf(age));
		if (idAID>0) 
			c.put("AID", idAID);
		if (leaseticks!=0) 
			c.put("Leaseticks", String.valueOf(leaseticks));
		if (idLocation>0) 
			c.put("Location", idLocation);
		if (name!=null) 
			c.put("Name", name);
		if (points!=0) 
			c.put("Points", String.valueOf(points));
		if (visionrange!=0) 
			c.put("VisionRange", String.valueOf(visionrange));
		if (worldheight!=0) 
			c.put("WorldHeight", String.valueOf(worldheight));
		if (worldwidth!=0) 
			c.put("WorldWidth", String.valueOf(worldwidth));
	}
	
	/**
	 * Restore this Observer 
	 * @param a the name of the attribute
	 * @param v the value of the attribute
	 */
	public void _set(String a, Object v) { //
		switch(hash(a)) {
		case 0: visionrange =  Integer.parseInt((String)v); return;
		case 1: points =  Integer.parseInt((String)v); return;
		case 2: leaseticks =  Integer.parseInt((String)v); return;
		case 3: worldheight =  Integer.parseInt((String)v); return;
		case 4: location =  (Location)v; return;
		case 5: worldwidth =  Integer.parseInt((String)v); return;
		case 6: aid =  (AgentIdentifier)v; return;
		case 7: age =  Integer.parseInt((String)v); return;
		case 8: name =  (String)v; return;
		}                        
	}
	
private static final int hash(String name) {
  int h=0;
  int c=name.length();
   h += 955818641*name.charAt(2);
   if (c<=5) return (h>>>15)%9;
   h += 186754998*name.charAt(5);
   return (h>>>15)%9;
}

}
