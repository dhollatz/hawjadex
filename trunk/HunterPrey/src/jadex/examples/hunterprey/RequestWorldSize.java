/*
 * RequestWorldSize.java
 *
 * Generated by Protege plugin Beanynizer. 
 * Changes will be lost! 
 */
package jadex.examples.hunterprey;

import jadex.adapter.fipa.AgentAction;


/**
 *  Java class for concept RequestWorldSize of hunterprey_beans ontology.
 */
public class RequestWorldSize	extends AgentAction implements nuggets.INugget
{
	//-------- constants ----------

	//-------- attributes ----------

	/** The height of the world. */
	protected  int  height;

	/** The width of the world. */
	protected  int  width;

	//-------- constructors --------

	/**
	 *  Default Constructor. <br>
	 *  Create a new <code>RequestWorldSize</code>.
	 */
	public RequestWorldSize()  { //
	}

	//-------- accessor methods --------

	/**
	 *  Get the height of this RequestWorldSize.
	 *  The height of the world.
	 * @return height
	 */
	public int  getHeight() {
		return this.height;
	}

	/**
	 *  Set the height of this RequestWorldSize.
	 *  The height of the world.
	 * @param height the value to be set
	 */
	public void  setHeight(int height) {
		this.height = height;
	}

	/**
	 *  Get the width of this RequestWorldSize.
	 *  The width of the world.
	 * @return width
	 */
	public int  getWidth() {
		return this.width;
	}

	/**
	 *  Set the width of this RequestWorldSize.
	 *  The width of the world.
	 * @param width the value to be set
	 */
	public void  setWidth(int width) {
		this.width = width;
	}

	//-------- object methods --------

	/**
	 *  Get a string representation of this RequestWorldSize.
	 *  @return The string representation.
	 */
	public String toString() {
		return "RequestWorldSize("
           + ")";
	}
	
	//--------- nuggets methods ---------
	
	/**
	 * Persist this RequestWorldSize using the nuggets utility.
	 * @param c 
	 */
	public void _persist(nuggets.ICruncher c) {
		// declare references
		// persist the nugget
		c.startConcept(this);
		if (height!=0) 
			c.put("Height", String.valueOf(height));
		if (width!=0) 
			c.put("Width", String.valueOf(width));
	}
	
	/**
	 * Restore this RequestWorldSize 
	 * @param a the name of the attribute
	 * @param v the value of the attribute
	 */
	public void _set(String a, Object v) { //
		switch(hash(a)) {
		case 0: height =  Integer.parseInt((String)v); return;
		case 1: width =  Integer.parseInt((String)v); return;
		}                        
	}
	
private static final int hash(String name) {
   return ((1822130434*name.charAt(0))>>>15)%2;
}

}
