/*
 * LocationData.java
 *
 * Generated by Protege plugin Beanynizer. 
 * Changes will be lost! 
 */
package jadex.examples.cleanerworld.multi;



/**
 *  Java class for concept Location of cleaner_beans ontology.
 */
public abstract class LocationData implements nuggets.INugget, java.io.Serializable
{
	//-------- constants ----------

	//-------- attributes ----------

	/** The x-coordinate. */
	protected  double  x;

	/** The y-coordinate. */
	protected  double  y;

	//-------- constructors --------

	/**
	 *  Default Constructor. <br>
	 *  Create a new <code>Location</code>.
	 */
	public LocationData()  { //
	}

	//-------- accessor methods --------

	/**
	 *  Get the x of this Location.
	 *  The x-coordinate.
	 * @return x
	 */
	public double  getX() {
		return this.x;
	}

	/**
	 *  Set the x of this Location.
	 *  The x-coordinate.
	 * @param x the value to be set
	 */
	public void  setX(double x) {
		this.x = x;
	}

	/**
	 *  Get the y of this Location.
	 *  The y-coordinate.
	 * @return y
	 */
	public double  getY() {
		return this.y;
	}

	/**
	 *  Set the y of this Location.
	 *  The y-coordinate.
	 * @param y the value to be set
	 */
	public void  setY(double y) {
		this.y = y;
	}

	//-------- object methods --------

	/**
	 *  Get a string representation of this Location.
	 *  @return The string representation.
	 */
	public String toString() {
		return "Location("
		+ "x="+getX()
		+ ", y="+getY()
           + ")";
	}
	
	//--------- nuggets methods ---------
	
	/**
	 * Persist this Location using the nuggets utility.
	 * @param c 
	 */
	public void _persist(nuggets.ICruncher c) {
		// declare references
		// persist the nugget
		c.startConcept(this);
		if (x!=0) 
			c.put("X", String.valueOf(x));
		if (y!=0) 
			c.put("Y", String.valueOf(y));
	}
	
	/**
	 * Restore this Location 
	 * @param a the name of the attribute
	 * @param v the value of the attribute
	 */
	public void _set(String a, Object v) { //
		switch(hash(a)) {
		case 0: x =  Double.parseDouble((String)v); return;
		case 1: y =  Double.parseDouble((String)v); return;
		}                        
	}
	
private static final int hash(String name) {
   return ((303965276*name.charAt(0))>>>15)%2;
}

}
