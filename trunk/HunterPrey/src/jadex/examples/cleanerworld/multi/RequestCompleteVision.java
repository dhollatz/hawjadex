/*
 * RequestCompleteVision.java
 *
 * Generated by Protege plugin Beanynizer. 
 * Changes will be lost! 
 */
package jadex.examples.cleanerworld.multi;

import jadex.adapter.fipa.AgentAction;


/**
 *  Java class for concept RequestCompleteVision of cleaner_beans ontology.
 */
public class RequestCompleteVision	extends AgentAction implements nuggets.INugget
{
	//-------- constants ----------

	//-------- attributes ----------

	/** Attribute for slot vision. */
	protected  Vision  vision;

	//-------- constructors --------

	/**
	 *  Default Constructor. <br>
	 *  Create a new <code>RequestCompleteVision</code>.
	 */
	public RequestCompleteVision()  { //
	}

	//-------- accessor methods --------

	/**
	 *  Get the vision of this RequestCompleteVision.
	 * @return vision
	 */
	public Vision  getVision() {
		return this.vision;
	}

	/**
	 *  Set the vision of this RequestCompleteVision.
	 * @param vision the value to be set
	 */
	public void  setVision(Vision vision) {
		this.vision = vision;
	}

	//-------- object methods --------

	/**
	 *  Get a string representation of this RequestCompleteVision.
	 *  @return The string representation.
	 */
	public String toString() {
		return "RequestCompleteVision("
           + ")";
	}
	
	//--------- nuggets methods ---------
	
	/**
	 * Persist this RequestCompleteVision using the nuggets utility.
	 * @param c 
	 */
	public void _persist(nuggets.ICruncher c) {
		// declare references
		int idVision = c.declare(vision);
		// persist the nugget
		c.startConcept(this);
		if (idVision>0) 
			c.put("Vision", idVision);
	}
	
	/**
	 * Restore this RequestCompleteVision 
	 * @param a the name of the attribute
	 * @param v the value of the attribute
	 */
	public void _set(String a, Object v) { //
		vision =  (Vision)v; 
	}
}
